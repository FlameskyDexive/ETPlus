//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Collections.Concurrent;
using System;


namespace ET
{

public sealed partial class SkillConfig: Bright.Config.BeanBase
{
    public SkillConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Level = _buf.ReadInt();
        AbstractType = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        Life = _buf.ReadInt();
        CD = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ActionEventIds = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ActionEventIds.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ActionEventTriggerPercent = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ActionEventTriggerPercent.Add(_e0);}}
        PostInit();
    }

    public static SkillConfig DeserializeSkillConfig(ByteBuf _buf)
    {
        return new SkillConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 技能等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 技能抽象类型
    /// </summary>
    public int AbstractType { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 技能持续时间毫秒
    /// </summary>
    public int Life { get; private set; }
    /// <summary>
    /// 冷却时间毫秒
    /// </summary>
    public int CD { get; private set; }
    /// <summary>
    /// 行为事件id
    /// </summary>
    public System.Collections.Generic.List<int> ActionEventIds { get; private set; }
    /// <summary>
    /// 行为事件触发百分比，跟左边id一一对应
    /// </summary>
    public System.Collections.Generic.List<int> ActionEventTriggerPercent { get; private set; }

    public const int __ID__ = -844226349;
    public override int GetTypeId() => __ID__;

    public  void Resolve(ConcurrentDictionary<Type, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Level:" + Level + ","
        + "AbstractType:" + AbstractType + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Life:" + Life + ","
        + "CD:" + CD + ","
        + "ActionEventIds:" + Bright.Common.StringUtil.CollectionToString(ActionEventIds) + ","
        + "ActionEventTriggerPercent:" + Bright.Common.StringUtil.CollectionToString(ActionEventTriggerPercent) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}